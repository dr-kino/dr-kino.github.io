<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>DoctorKino</title>
    <link>https://dr-kino.github.io</link>
    <description>DoctorKino is blog about Programming, Embedded Systems, RF, Control, Digital Processing, Analog Processing, Security and Reverse Engineering</description>
    <lastBuildDate>29 Dec 2019 15:13:46 WET</lastBuildDate>
    <language>en-gb</language>

    
      <item>
        <title>Setting up uncrustify tool for git automation (C/C++ Languages)</title>
        <link>https://dr-kino.github.io/2019/12/29/Setup-to-use-uncrustify-and-git/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2019/12/29/Setup-to-use-uncrustify-and-git/</guid>
        <pubDate>29 Dec 2019 00:00:01 WET</pubDate>
        <description><![CDATA[Uncrustify is a tool used to fit a standard of codification, turning the code as a standardized code. It is very used in cases of large projects where is difficult to disseminate a coding conventions or in case of each team member is used to use different IDE to program.
]]></description>
      </item>
    
      <item>
        <title>Investigating Car Key (RF Remote Control) With HackRF One - Part 1</title>
        <link>https://dr-kino.github.io/2019/12/27/Investigating-Car-Key-Control/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2019/12/27/Investigating-Car-Key-Control/</guid>
        <pubDate>27 Dec 2019 00:00:01 WET</pubDate>
        <description><![CDATA[First of all, I would like to register that this post has no intention to teach how to break the laws, to ensure this I will omit the car model and suppress any other information that could open a window for malicius people. I want to mension that it is just a theme that should be developed for s...]]></description>
      </item>
    
      <item>
        <title>Test Coverage Using Google Test, GCov and LCov</title>
        <link>https://dr-kino.github.io/2019/12/22/test-coverage-using-gtest-gcov-and-lcov/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2019/12/22/test-coverage-using-gtest-gcov-and-lcov/</guid>
        <pubDate>22 Dec 2019 00:00:01 WET</pubDate>
        <description><![CDATA[This post will describe a setup to start working with test coverage. First of all, I would like to highlight the GitHub link of this project BraveCoverage

It is related to a very small piece of code to demonstrate how to start a project providing test coverage metrics. But why this is important?...]]></description>
      </item>
    
      <item>
        <title>Base Project to Use GTest and GMock for Unit Tests</title>
        <link>https://dr-kino.github.io/2019/11/04/base-project-to-use-gtest-and-gmock-in-unittest/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2019/11/04/base-project-to-use-gtest-and-gmock-in-unittest/</guid>
        <pubDate>04 Nov 2019 00:00:01 WET</pubDate>
        <description><![CDATA[The goal of this post is to create a base to be used in all unit tests project that uses google test and google mock framework. Here I am configuring the environment for a Debian distribution and, of course, the commands below is valid only for distribution Debian based. So, first thing first, we...]]></description>
      </item>
    
      <item>
        <title>VHDL - Two Logic Gates Analysis</title>
        <link>https://dr-kino.github.io/2017/12/19/vhdl-two-logic-gates-analysis/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2017/12/19/vhdl-two-logic-gates-analysis/</guid>
        <pubDate>19 Dec 2017 00:00:01 WET</pubDate>
        <description><![CDATA[Hello everyone!!!

Firstly I would like to say that the following project is an initial example for who wishes start a work with VHDL, after read this example you will be able to simulate your first digital design in vhdl.

The circuit below represents two logical gates “AND” and “OR”, and their ...]]></description>
      </item>
    
      <item>
        <title>Reversing a BIOS Flash Via Hardware - First Steps</title>
        <link>https://dr-kino.github.io/2017/11/24/reversing-a-bios-flash-via-hardware-first-steps/</link>
        <guid isPermaLink="true">https://dr-kino.github.io/2017/11/24/reversing-a-bios-flash-via-hardware-first-steps/</guid>
        <pubDate>24 Nov 2017 00:00:01 WET</pubDate>
        <description><![CDATA[Hello everyone!!!

This brief tutorial about dumping the BIOS (Basic Input/Output System) content directly via hardware (Programmer MiniPro TL866), will pass to you the procedure executed to get BIOS binary code. Other articles of this blog will cover binary contents analysis and some modificatio...]]></description>
      </item>
    
  </channel>
</rss>
